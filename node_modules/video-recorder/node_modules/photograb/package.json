{
  "name": "photograb",
  "version": "0.0.1",
  "description": "Browser module for capturing snapshots from a video (or other compatible) element.",
  "main": "photograb.js",
  "browser": "photograb.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:HenrikJoreteg/photograb"
  },
  "keywords": [
    "browser",
    "getUserMedia",
    "webrtc"
  ],
  "devDependencies": {
    "getusermedia": "",
    "attachmediastream": ""
  },
  "author": {
    "name": "Henrik Joreteg",
    "email": "henrik@andyet.net"
  },
  "license": "MIT",
  "readme": "# photograb\n\nSimple API for capturing frames from a video element in a dataURI with the proper scaling applied.\n\nThis module works well with browserify. If you want to use it by itself or with AMD use the `photograb.bundle.js` file instead.\n\n## what is it?\n\nPhotograb simply takes a canvas tag and returns a dataURI (suitable as a `src` attribute of an `<img>`) with the given options.\n\n## installing\n\n```\nnpm install photograb\n```\n\n## example\n\n\n```js\nvar getUserMedia = require('getusermedia');\nvar attachMediaStream = require('attachmediastream');\nvar photograb = require('photograb');\n\nvar videoEl = document.getElementById('localVideo');\nvar containerEl = document.getElementById('imgContainer');\n\n// get media\ngetUserMedia(function (err, stream) {\n    if (stream) {\n        // attach it to our element\n        attachMediaStream(stream, videoEl, {muted: true});\n    }\n});\n\n// click handler for clicking on the video\nfunction capture() {\n    // create an image element\n    var image = document.createElement('img');\n    // set the source to dataURI from photograb\n    image.src = photograb(videoEl);\n    // set it as the contents of our container\n    containerEl.innerHTML = image.outerHTML;\n    return false;\n}\n\n// register our handler\nvideoEl.addEventListener('click', capture, false);\n\n```\n\n## options\n\nNo options are necessary. \n\nBut you can pass the following as part of the options object:\n\n`width` - will return an image of that width, if passed by itself, it will scale proportionately.\n\n`height` - will return an image of that height, if passed by itself, it will scale proportionately.\n\n** note if you pass both a height/width it will skew image.\n\n## license\n\nMIT\n\n## credits\n\nLike this? Follow [@HenrikJoreteg](http://twitter.com/henrikjoreteg) on twitter and check out all the similar modules in http://simplewebrtc.com.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/HenrikJoreteg/photograb/issues"
  },
  "_id": "photograb@0.0.1",
  "dist": {
    "shasum": "c19bdd1fcc4369c1ca32ba62d16dd601cd0dff66"
  },
  "_from": "photograb@0.0.1",
  "_resolved": "https://registry.npmjs.org/photograb/-/photograb-0.0.1.tgz"
}
